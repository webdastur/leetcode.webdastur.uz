{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"LeetCode Ushbu \"LeetCode\" video darslar(qo'llanma) orqali. \"LeetCode.Com\" platformasidagi. Masalalarni mavzulashtirilgan holatda o'zim bilimimdan kelib chiqib ishlab video hamda matn holatda YouTube hamda ushbu vebsaytda joylab boraman. Masalalar mavzu hamda qiyinlik darajasi bo'yicha quyidagicha bo'limlarga bo'lib chiqiladi. Mavzu Nomi: Easy Medium Hard Ba'zi masalalar birdan ortiq yechimlarga ega bo'lishi mumkin. Barcha masala yechimlari Github platformasiga joylab boriladi. NIMALARDAN FOYDALANILADI Masalalarni yechishda Python dasturlash tilidan foydalanamiz. PyCharm dasturlash muhitidan kod yozish uchun foydalanamiz. IJTIMOIY TARMOQDAGI MANZILLAR Telegram: https://t.me/webdastur YouTube: https://bit.ly/AlexTechUz Github: https://github.com/webdastur/leetcode P.S: O'zbekcha tarjimalarda texnik so'zlarni tarjima qilishni hohlamadim va shevada gapirilgan gaplar mavjud. Shu sababli agar sof o'zbek tilida maqola yoki video hohlasangiz bu yer siz uchun emas!","title":"Kirish"},{"location":"#leetcode","text":"Ushbu \"LeetCode\" video darslar(qo'llanma) orqali. \"LeetCode.Com\" platformasidagi. Masalalarni mavzulashtirilgan holatda o'zim bilimimdan kelib chiqib ishlab video hamda matn holatda YouTube hamda ushbu vebsaytda joylab boraman. Masalalar mavzu hamda qiyinlik darajasi bo'yicha quyidagicha bo'limlarga bo'lib chiqiladi. Mavzu Nomi: Easy Medium Hard Ba'zi masalalar birdan ortiq yechimlarga ega bo'lishi mumkin. Barcha masala yechimlari Github platformasiga joylab boriladi.","title":" LeetCode"},{"location":"#nimalardan-foydalaniladi","text":"Masalalarni yechishda Python dasturlash tilidan foydalanamiz. PyCharm dasturlash muhitidan kod yozish uchun foydalanamiz.","title":"NIMALARDAN FOYDALANILADI"},{"location":"#ijtimoiy-tarmoqdagi-manzillar","text":"Telegram: https://t.me/webdastur YouTube: https://bit.ly/AlexTechUz Github: https://github.com/webdastur/leetcode P.S: O'zbekcha tarjimalarda texnik so'zlarni tarjima qilishni hohlamadim va shevada gapirilgan gaplar mavjud. Shu sababli agar sof o'zbek tilida maqola yoki video hohlasangiz bu yer siz uchun emas!","title":"IJTIMOIY TARMOQDAGI MANZILLAR"},{"location":"array/easy/1480-running-sum-of-1d-array/","text":"MASALA SHARTI: LINK Inglizcha : Given an array nums . We define a running sum of an array as runningSum[i] = sum(nums[0]\u2026nums[i]) . Return the running sum of nums . O'zbekcha : nums array berilgan. Biz nums array yig'indisini quyidagicha hisoblab runningSum[i] = sum(nums[0]\u2026nums[i]) . nums ning yig'indisi qaytarilsin. Misol 1 $ Input: nums = [ 1 ,2,3,4 ] $ Output: [ 1 ,3,6,10 ] $ Explanation: Running sum is obtained as follows: [ 1 , 1 +2, 1 +2+3, 1 +2+3+4 ] . Misol 2 $ Input: nums = [ 1 ,1,1,1,1 ] $ Output: [ 1 ,2,3,4,5 ] $ Explanation: Running sum is obtained as follows: [ 1 , 1 +1, 1 +1+1, 1 +1+1+1, 1 +1+1+1+1 ] . Misol 3 $ Input: nums = [ 3 ,1,2,10,1 ] $ Output: [ 3 ,4,6,16,17 ] Cheklovlar 1 <= nums.length <= 1000 -10^6 <= nums[i] <= 10^6 - Yechim : LINK Masala shartiga ko'ra nums[i] elementi o'zidan oldingi elementlar yig'indisiga tenglab chiqishimiz kerak. Shu sababli 1 dan n gacha sikl ochamiz. Sababi 0 dan boshlashimiz shart emas 0 - elementdan oldin boshqa qiymat yo'q va har bir yurishida biz nums[i] = nums[i] + nums[i - 1] ga tenglab boramiz. Natija sifatida nums ni o'zini qaytarib yuboramiz. Time Complexity : O(n - 1) Space Complexity : O(1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # Author: Abdulaminkhon Khaydarov # Date: 06/11/22 # Problem URL: https://leetcode.com/problems/running-sum-of-1d-array/ from typing import List class Solution : def runningSum ( self , nums : List [ int ]) -> List [ int ]: for i in range ( 1 , len ( nums )): nums [ i ] = nums [ i ] + nums [ i - 1 ] return nums if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . runningSum ([ 1 , 2 , 3 , 4 ]) == [ 1 , 3 , 6 , 10 ]) # Example 2 print ( solution . runningSum ([ 1 , 1 , 1 , 1 , 1 ]) == [ 1 , 2 , 3 , 4 , 5 ]) # Example 3 print ( solution . runningSum ([ 3 , 1 , 2 , 10 , 1 ]) == [ 3 , 4 , 6 , 16 , 17 ])","title":"1480 - Running Sum of 1d Array"},{"location":"array/easy/1480-running-sum-of-1d-array/#masala-sharti-link","text":"Inglizcha : Given an array nums . We define a running sum of an array as runningSum[i] = sum(nums[0]\u2026nums[i]) . Return the running sum of nums . O'zbekcha : nums array berilgan. Biz nums array yig'indisini quyidagicha hisoblab runningSum[i] = sum(nums[0]\u2026nums[i]) . nums ning yig'indisi qaytarilsin.","title":"MASALA SHARTI: LINK"},{"location":"array/easy/1480-running-sum-of-1d-array/#misol-1","text":"$ Input: nums = [ 1 ,2,3,4 ] $ Output: [ 1 ,3,6,10 ] $ Explanation: Running sum is obtained as follows: [ 1 , 1 +2, 1 +2+3, 1 +2+3+4 ] .","title":"Misol 1"},{"location":"array/easy/1480-running-sum-of-1d-array/#misol-2","text":"$ Input: nums = [ 1 ,1,1,1,1 ] $ Output: [ 1 ,2,3,4,5 ] $ Explanation: Running sum is obtained as follows: [ 1 , 1 +1, 1 +1+1, 1 +1+1+1, 1 +1+1+1+1 ] .","title":"Misol 2"},{"location":"array/easy/1480-running-sum-of-1d-array/#misol-3","text":"$ Input: nums = [ 3 ,1,2,10,1 ] $ Output: [ 3 ,4,6,16,17 ]","title":"Misol 3"},{"location":"array/easy/1480-running-sum-of-1d-array/#cheklovlar","text":"1 <= nums.length <= 1000 -10^6 <= nums[i] <= 10^6","title":"Cheklovlar"},{"location":"array/easy/1480-running-sum-of-1d-array/#-yechim-link","text":"Masala shartiga ko'ra nums[i] elementi o'zidan oldingi elementlar yig'indisiga tenglab chiqishimiz kerak. Shu sababli 1 dan n gacha sikl ochamiz. Sababi 0 dan boshlashimiz shart emas 0 - elementdan oldin boshqa qiymat yo'q va har bir yurishida biz nums[i] = nums[i] + nums[i - 1] ga tenglab boramiz. Natija sifatida nums ni o'zini qaytarib yuboramiz. Time Complexity : O(n - 1) Space Complexity : O(1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # Author: Abdulaminkhon Khaydarov # Date: 06/11/22 # Problem URL: https://leetcode.com/problems/running-sum-of-1d-array/ from typing import List class Solution : def runningSum ( self , nums : List [ int ]) -> List [ int ]: for i in range ( 1 , len ( nums )): nums [ i ] = nums [ i ] + nums [ i - 1 ] return nums if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . runningSum ([ 1 , 2 , 3 , 4 ]) == [ 1 , 3 , 6 , 10 ]) # Example 2 print ( solution . runningSum ([ 1 , 1 , 1 , 1 , 1 ]) == [ 1 , 2 , 3 , 4 , 5 ]) # Example 3 print ( solution . runningSum ([ 3 , 1 , 2 , 10 , 1 ]) == [ 3 , 4 , 6 , 16 , 17 ])","title":"- Yechim: LINK"},{"location":"array/easy/1920-build-array-from-permutation/","text":"MASALA SHARTI: LINK Inglizcha : Given a zero-based permutation nums ( 0-indexed ), build an array ans of the same length where !# ans[i] = nums[nums[i]] for each 0 <= i < nums.length and return it. A zero-based permutation nums is an array of distinct integers from 0 to nums.length - 1 ( inclusive ). O'zbekcha : Nolga asoslangan ya'ni index 0 dan boshlanuvchi nums permutatsiya berilgan. Shu bilan bir xil uzunlikda ans array yaratib 0 <= i < nums.length oraliqda ans[i] = nums[nums[i]] tenglab natijani qaytarish kerak ekan. Misol 1 $ Input: nums = [ 0 ,2,1,5,3,4 ] $ Output: [ 0 ,1,2,4,5,3 ] $ Explanation: The array ans is built as follows: ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]] = [nums[0], nums[2], nums[1], nums[5], nums[3], nums[4]] = [0,1,2,4,5,3] Misol 2 $ Input: nums = [ 5 ,0,1,2,3,4 ] $ Output: [ 4 ,5,0,1,2,3 ] $ Explanation: The array ans is built as follows: ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]] = [nums[5], nums[0], nums[1], nums[2], nums[3], nums[4]] = [4,5,0,1,2,3] Cheklovlar 1 <= nums.length <= 1000 0 <= nums[i] < nums.length The elements in nums are distinct . - Yechim : LINK Agar yangi array yaratmay to'g'ridan to'g'ri nums[i] = nums[nums[i]] ga tenglab qo'ysak bizda nums[i] ni o'zida turgan qiymat yo'qolib qoladi shu sababli ans list yaratib olamiz. ans uzunligi(length) nums uzunligi bilan teng bo'lgani sababli yaratish davrida boshlang'ich 0 qiymat berib chiqamiz keyin sikl yaratib ushbu siklda ans[i] = nums[nums[i]] ga tenglab olamiz va ans ni natija sifatida qaytarib yuboramiz. Time Complexity : O(n) Space Complexity : O(n) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 # Author: Abdulaminkhon Khaydarov # Date: 30/10/22 # Problem URL: https://leetcode.com/problems/build-array-from-permutation/ from typing import List class Solution : def buildArray ( self , nums : List [ int ]) -> List [ int ]: # \"nums\" ni uzunligi bilan teng \"ans\" listini yaratib olamiz ans : List [ int ] = [ 0 for _ in nums ] # \"0\" dan \"nums\" uzunligigacha sikl yaratib \"ans[i]\" ni \"nums[nums[i]]\" ga tenglab chiqamiz. for i in range ( len ( nums )): ans [ i ] = nums [ nums [ i ]] return ans if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . buildArray ([ 0 , 2 , 1 , 5 , 3 , 4 ]) == [ 0 , 1 , 2 , 4 , 5 , 3 ]) # Example 2 print ( solution . buildArray ([ 5 , 0 , 1 , 2 , 3 , 4 ]) == [ 4 , 5 , 0 , 1 , 2 , 3 ]) - Yechim : LINK Birinchi yechimda biz qo'shimcha array dan foydalandik. Buni qo'shimcha array ishlatmay ishlash usuli mavjud biz bunda xotiradan constant joy ishlatamiz. nums ni uzunligini n ga tenglab olamiz keyin 0 dan n gacha sikl ochamiz bunda har bir sikl bosqichida biz nums[i] ni num ga tenglab turamiz. Agar biz nums[num] ni n ga bo'lib qoldiqni olsak bizda hozirgi nums[i] teng bo'ladigan qiymat kelib chiqadi va buni biz b o'zgaruvchisiga saqlab turamizda nums[i] da turgan qiymatga n * b + num shuni tenglab qo'yamiz. Bizga yana bitta sikl kerak bo'ladi, bu ham 0 dan n gacha bo'ladi. Biz nums[i] ni n ga bo'lib butun qismini olsak bizga avvalroq saqlab qo'ygan qiymatimizni qaytaradi va buni nums[i] ga tenglab qo'yamiz. Time Complexity : O(n) Space Complexity : O(1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 # Author: Abdulaminkhon Khaydarov # Date: 30/10/22 # Problem URL: https://leetcode.com/problems/build-array-from-permutation/ from typing import List class Solution : def buildArray ( self , nums : List [ int ]) -> List [ int ]: # nums ni uzunligini n ga tenglab olamiz. n = len ( nums ) for i in range ( len ( nums )): # \"nums[i]\" elementini vaqtincha \"num\" ga olib turamiz num = nums [ i ] # \"nums[num]\" elementini \"n\" ga bo'lib qoldiqni \"b\" ga tenglab turamiz. b = nums [ num ] % n # \"nums[i]\" ga \"n * b + num\" ni tenglab olamiz. nums [ i ] = n * b + num for i in range ( len ( nums )): # \"nums[i]\" ni \"nums[i]\" ni \"n\" ga bo'lib butun qismiga tenglab olamiz. nums [ i ] = nums [ i ] // n return nums if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . buildArray ([ 0 , 2 , 1 , 5 , 3 , 4 ]) == [ 0 , 1 , 2 , 4 , 5 , 3 ]) # Example 2 print ( solution . buildArray ([ 5 , 0 , 1 , 2 , 3 , 4 ]) == [ 4 , 5 , 0 , 1 , 2 , 3 ])","title":"1920 - Build Array from Permutation"},{"location":"array/easy/1920-build-array-from-permutation/#masala-sharti-link","text":"Inglizcha : Given a zero-based permutation nums ( 0-indexed ), build an array ans of the same length where !# ans[i] = nums[nums[i]] for each 0 <= i < nums.length and return it. A zero-based permutation nums is an array of distinct integers from 0 to nums.length - 1 ( inclusive ). O'zbekcha : Nolga asoslangan ya'ni index 0 dan boshlanuvchi nums permutatsiya berilgan. Shu bilan bir xil uzunlikda ans array yaratib 0 <= i < nums.length oraliqda ans[i] = nums[nums[i]] tenglab natijani qaytarish kerak ekan.","title":"MASALA SHARTI: LINK"},{"location":"array/easy/1920-build-array-from-permutation/#misol-1","text":"$ Input: nums = [ 0 ,2,1,5,3,4 ] $ Output: [ 0 ,1,2,4,5,3 ] $ Explanation: The array ans is built as follows: ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]] = [nums[0], nums[2], nums[1], nums[5], nums[3], nums[4]] = [0,1,2,4,5,3]","title":"Misol 1"},{"location":"array/easy/1920-build-array-from-permutation/#misol-2","text":"$ Input: nums = [ 5 ,0,1,2,3,4 ] $ Output: [ 4 ,5,0,1,2,3 ] $ Explanation: The array ans is built as follows: ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]] = [nums[5], nums[0], nums[1], nums[2], nums[3], nums[4]] = [4,5,0,1,2,3]","title":"Misol 2"},{"location":"array/easy/1920-build-array-from-permutation/#cheklovlar","text":"1 <= nums.length <= 1000 0 <= nums[i] < nums.length The elements in nums are distinct .","title":"Cheklovlar"},{"location":"array/easy/1920-build-array-from-permutation/#-yechim-link","text":"Agar yangi array yaratmay to'g'ridan to'g'ri nums[i] = nums[nums[i]] ga tenglab qo'ysak bizda nums[i] ni o'zida turgan qiymat yo'qolib qoladi shu sababli ans list yaratib olamiz. ans uzunligi(length) nums uzunligi bilan teng bo'lgani sababli yaratish davrida boshlang'ich 0 qiymat berib chiqamiz keyin sikl yaratib ushbu siklda ans[i] = nums[nums[i]] ga tenglab olamiz va ans ni natija sifatida qaytarib yuboramiz. Time Complexity : O(n) Space Complexity : O(n) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 # Author: Abdulaminkhon Khaydarov # Date: 30/10/22 # Problem URL: https://leetcode.com/problems/build-array-from-permutation/ from typing import List class Solution : def buildArray ( self , nums : List [ int ]) -> List [ int ]: # \"nums\" ni uzunligi bilan teng \"ans\" listini yaratib olamiz ans : List [ int ] = [ 0 for _ in nums ] # \"0\" dan \"nums\" uzunligigacha sikl yaratib \"ans[i]\" ni \"nums[nums[i]]\" ga tenglab chiqamiz. for i in range ( len ( nums )): ans [ i ] = nums [ nums [ i ]] return ans if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . buildArray ([ 0 , 2 , 1 , 5 , 3 , 4 ]) == [ 0 , 1 , 2 , 4 , 5 , 3 ]) # Example 2 print ( solution . buildArray ([ 5 , 0 , 1 , 2 , 3 , 4 ]) == [ 4 , 5 , 0 , 1 , 2 , 3 ])","title":"- Yechim: LINK"},{"location":"array/easy/1920-build-array-from-permutation/#-yechim-link_1","text":"Birinchi yechimda biz qo'shimcha array dan foydalandik. Buni qo'shimcha array ishlatmay ishlash usuli mavjud biz bunda xotiradan constant joy ishlatamiz. nums ni uzunligini n ga tenglab olamiz keyin 0 dan n gacha sikl ochamiz bunda har bir sikl bosqichida biz nums[i] ni num ga tenglab turamiz. Agar biz nums[num] ni n ga bo'lib qoldiqni olsak bizda hozirgi nums[i] teng bo'ladigan qiymat kelib chiqadi va buni biz b o'zgaruvchisiga saqlab turamizda nums[i] da turgan qiymatga n * b + num shuni tenglab qo'yamiz. Bizga yana bitta sikl kerak bo'ladi, bu ham 0 dan n gacha bo'ladi. Biz nums[i] ni n ga bo'lib butun qismini olsak bizga avvalroq saqlab qo'ygan qiymatimizni qaytaradi va buni nums[i] ga tenglab qo'yamiz. Time Complexity : O(n) Space Complexity : O(1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 # Author: Abdulaminkhon Khaydarov # Date: 30/10/22 # Problem URL: https://leetcode.com/problems/build-array-from-permutation/ from typing import List class Solution : def buildArray ( self , nums : List [ int ]) -> List [ int ]: # nums ni uzunligini n ga tenglab olamiz. n = len ( nums ) for i in range ( len ( nums )): # \"nums[i]\" elementini vaqtincha \"num\" ga olib turamiz num = nums [ i ] # \"nums[num]\" elementini \"n\" ga bo'lib qoldiqni \"b\" ga tenglab turamiz. b = nums [ num ] % n # \"nums[i]\" ga \"n * b + num\" ni tenglab olamiz. nums [ i ] = n * b + num for i in range ( len ( nums )): # \"nums[i]\" ni \"nums[i]\" ni \"n\" ga bo'lib butun qismiga tenglab olamiz. nums [ i ] = nums [ i ] // n return nums if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . buildArray ([ 0 , 2 , 1 , 5 , 3 , 4 ]) == [ 0 , 1 , 2 , 4 , 5 , 3 ]) # Example 2 print ( solution . buildArray ([ 5 , 0 , 1 , 2 , 3 , 4 ]) == [ 4 , 5 , 0 , 1 , 2 , 3 ])","title":"- Yechim: LINK"},{"location":"array/easy/1929-concatenation-of-array/","text":"MASALA SHARTI: LINK Inglizcha : Given an integer array nums of length n , you want to create an array ans of length 2n where ans[i] == nums[i] and ans[i + n] == nums[i] for 0 <= i < n ( 0-indexed ). Specifically, ans is the concatenation of two nums arrays. Return the array ans . O'zbekcha : n uzunlikga ega butun sonli array berilgan, siz ans 2n uzunlikga ega array yaratishingiz kerak qaysiki ans[i] == nums[i] va ans[i + n] == nums[i] ni qanoatlantirishi kerak 0 <= i < n . ans bu ikkita nums ni birikmasi. ans arrayni natija sifatida qaytaring. Misol 1 $ Input: nums = [ 1 ,2,1 ] $ Output: [ 1 ,2,1,1,2,1 ] $ Explanation: The array ans is formed as follows: - ans = [nums[0],nums[1],nums[2],nums[0],nums[1],nums[2]] - ans = [1,2,1,1,2,1] Misol 2 $ Input: nums = [ 1 ,3,2,1 ] $ Output: [ 1 ,3,2,1,1,3,2,1 ] $ Explanation: The array ans is formed as follows: - ans = [nums[0],nums[1],nums[2],nums[3],nums[0],nums[1],nums[2],nums[3]] - ans = [1,3,2,1,1,3,2,1] Cheklovlar n == nums.length 1 <= n <= 1000 1 <= nums[i] <= 1000 - Yechim : LINK Bizga nums ni uzunligi kerak bunga biz n o'zgaruvchisini yaratib nums ni uzunligini tenglab olamiz va 0 dan n gacha sikl ochib nums ga nums[i] qo'shib boramiz. Oxirida nums ni qaytarib yuboramiz. Time Complexity : O(n) Space Complexity : O(2n) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # Author: Abdulaminkhon Khaydarov # Date: 02/11/22 # Problem URL: https://leetcode.com/problems/concatenation-of-array/ from typing import List class Solution : def getConcatenation ( self , nums : List [ int ]) -> List [ int ]: n = len ( nums ) for i in range ( n ): nums . append ( nums [ i ]) return nums if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . getConcatenation ([ 1 , 2 , 1 ]) == [ 1 , 2 , 1 , 1 , 2 , 1 ]) # Example 2 print ( solution . getConcatenation ([ 1 , 3 , 2 , 1 ]) == [ 1 , 3 , 2 , 1 , 1 , 3 , 2 , 1 ]) - Yechim : LINK Pythonda list ni butun songa ko'paytirsa bo'ladi. Biz bu holatda nums ni 2 ga ko'paytirib natija sifatida qaytarib yuborsak bo'ldi. Time Complexity : O(n) Space Complexity : O(2n) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Author: Abdulaminkhon Khaydarov # Date: 02/11/22 # Problem URL: https://leetcode.com/problems/concatenation-of-array/ from typing import List class Solution : def getConcatenation ( self , nums : List [ int ]) -> List [ int ]: return nums * 2 if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . getConcatenation ([ 1 , 2 , 1 ]) == [ 1 , 2 , 1 , 1 , 2 , 1 ]) # Example 2 print ( solution . getConcatenation ([ 1 , 3 , 2 , 1 ]) == [ 1 , 3 , 2 , 1 , 1 , 3 , 2 , 1 ]) - Yechim : LINK Pythonda list ni list ga qo'shsa bo'ladi. nums + nums ham bizga bir xil natija beradi. Time Complexity : O(n) Space Complexity : O(2n) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Author: Abdulaminkhon Khaydarov # Date: 02/11/22 # Problem URL: https://leetcode.com/problems/concatenation-of-array/ from typing import List class Solution : def getConcatenation ( self , nums : List [ int ]) -> List [ int ]: return nums + nums if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . getConcatenation ([ 1 , 2 , 1 ]) == [ 1 , 2 , 1 , 1 , 2 , 1 ]) # Example 2 print ( solution . getConcatenation ([ 1 , 3 , 2 , 1 ]) == [ 1 , 3 , 2 , 1 , 1 , 3 , 2 , 1 ])","title":"1929 - Concatenation of Array"},{"location":"array/easy/1929-concatenation-of-array/#masala-sharti-link","text":"Inglizcha : Given an integer array nums of length n , you want to create an array ans of length 2n where ans[i] == nums[i] and ans[i + n] == nums[i] for 0 <= i < n ( 0-indexed ). Specifically, ans is the concatenation of two nums arrays. Return the array ans . O'zbekcha : n uzunlikga ega butun sonli array berilgan, siz ans 2n uzunlikga ega array yaratishingiz kerak qaysiki ans[i] == nums[i] va ans[i + n] == nums[i] ni qanoatlantirishi kerak 0 <= i < n . ans bu ikkita nums ni birikmasi. ans arrayni natija sifatida qaytaring.","title":"MASALA SHARTI: LINK"},{"location":"array/easy/1929-concatenation-of-array/#misol-1","text":"$ Input: nums = [ 1 ,2,1 ] $ Output: [ 1 ,2,1,1,2,1 ] $ Explanation: The array ans is formed as follows: - ans = [nums[0],nums[1],nums[2],nums[0],nums[1],nums[2]] - ans = [1,2,1,1,2,1]","title":"Misol 1"},{"location":"array/easy/1929-concatenation-of-array/#misol-2","text":"$ Input: nums = [ 1 ,3,2,1 ] $ Output: [ 1 ,3,2,1,1,3,2,1 ] $ Explanation: The array ans is formed as follows: - ans = [nums[0],nums[1],nums[2],nums[3],nums[0],nums[1],nums[2],nums[3]] - ans = [1,3,2,1,1,3,2,1]","title":"Misol 2"},{"location":"array/easy/1929-concatenation-of-array/#cheklovlar","text":"n == nums.length 1 <= n <= 1000 1 <= nums[i] <= 1000","title":"Cheklovlar"},{"location":"array/easy/1929-concatenation-of-array/#-yechim-link","text":"Bizga nums ni uzunligi kerak bunga biz n o'zgaruvchisini yaratib nums ni uzunligini tenglab olamiz va 0 dan n gacha sikl ochib nums ga nums[i] qo'shib boramiz. Oxirida nums ni qaytarib yuboramiz. Time Complexity : O(n) Space Complexity : O(2n) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # Author: Abdulaminkhon Khaydarov # Date: 02/11/22 # Problem URL: https://leetcode.com/problems/concatenation-of-array/ from typing import List class Solution : def getConcatenation ( self , nums : List [ int ]) -> List [ int ]: n = len ( nums ) for i in range ( n ): nums . append ( nums [ i ]) return nums if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . getConcatenation ([ 1 , 2 , 1 ]) == [ 1 , 2 , 1 , 1 , 2 , 1 ]) # Example 2 print ( solution . getConcatenation ([ 1 , 3 , 2 , 1 ]) == [ 1 , 3 , 2 , 1 , 1 , 3 , 2 , 1 ])","title":"- Yechim: LINK"},{"location":"array/easy/1929-concatenation-of-array/#-yechim-link_1","text":"Pythonda list ni butun songa ko'paytirsa bo'ladi. Biz bu holatda nums ni 2 ga ko'paytirib natija sifatida qaytarib yuborsak bo'ldi. Time Complexity : O(n) Space Complexity : O(2n) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Author: Abdulaminkhon Khaydarov # Date: 02/11/22 # Problem URL: https://leetcode.com/problems/concatenation-of-array/ from typing import List class Solution : def getConcatenation ( self , nums : List [ int ]) -> List [ int ]: return nums * 2 if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . getConcatenation ([ 1 , 2 , 1 ]) == [ 1 , 2 , 1 , 1 , 2 , 1 ]) # Example 2 print ( solution . getConcatenation ([ 1 , 3 , 2 , 1 ]) == [ 1 , 3 , 2 , 1 , 1 , 3 , 2 , 1 ])","title":"- Yechim: LINK"},{"location":"array/easy/1929-concatenation-of-array/#-yechim-link_2","text":"Pythonda list ni list ga qo'shsa bo'ladi. nums + nums ham bizga bir xil natija beradi. Time Complexity : O(n) Space Complexity : O(2n) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # Author: Abdulaminkhon Khaydarov # Date: 02/11/22 # Problem URL: https://leetcode.com/problems/concatenation-of-array/ from typing import List class Solution : def getConcatenation ( self , nums : List [ int ]) -> List [ int ]: return nums + nums if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . getConcatenation ([ 1 , 2 , 1 ]) == [ 1 , 2 , 1 , 1 , 2 , 1 ]) # Example 2 print ( solution . getConcatenation ([ 1 , 3 , 2 , 1 ]) == [ 1 , 3 , 2 , 1 , 1 , 3 , 2 , 1 ])","title":"- Yechim: LINK"},{"location":"array/easy/2011-final-value-of-variable-after-performing-operations/","text":"MASALA SHARTI: LINK Inglizcha : There is a programming language with only four operations and one variable X : ++X and X++ increments the value of the variable X by 1 . --X and X-- decrements the value of the variable X by 1 . Initially, the value of X is 0 . Given an array of strings operations containing a list of operations, return the final value of X after performing all the operations. O'zbekcha : Bitta dasturlash tili bor 4 ta operatsiya bilan va X o'zgaruvchisi bor: ++X va X++ operatsiyasilari X o'zgaruvchini 1 ga oshiradi. --X va X-- operatsiyasilari X o'zgaruvchini 1 ga kamaytiradi. X ning boshlang'ich qiymati 0 . Berilgan operations array barcha bajarilishi bo'lgan operatsiya(string)larni o'z ichiga olgan. Barcha operatsiyadan so'ng X ning yakuniy qiymati qaytarilsin. Misol 1 $ Input: operations = [ \"--X\" , \"X++\" , \"X++\" ] $ Output: 1 $ Explanation: The operations are performed as follows: Initially, X = 0. --X: X is decremented by 1, X = 0 - 1 = -1. X++: X is incremented by 1, X = -1 + 1 = 0. X++: X is incremented by 1, X = 0 + 1 = 1. Misol 2 $ Input: operations = [ \"++X\" , \"++X\" , \"X++\" ] $ Output: 3 $ Explanation: The operations are performed as follows: Initially, X = 0. ++X: X is incremented by 1, X = 0 + 1 = 1. ++X: X is incremented by 1, X = 1 + 1 = 2. X++: X is incremented by 1, X = 2 + 1 = 3. Misol 3 $ Input: operations = [ \"X++\" , \"++X\" , \"--X\" , \"X--\" ] $ Output: 0 $ Explanation: The operations are performed as follows: Initially, X = 0. X++: X is incremented by 1, X = 0 + 1 = 1. ++X: X is incremented by 1, X = 1 + 1 = 2. --X: X is decremented by 1, X = 2 - 1 = 1. X--: X is decremented by 1, X = 1 - 1 = 0. Cheklovlar 1 <= operations.length <= 100 operations[i] will be either \"++X\" , \"X++\" , \"--X\" , or \"X--\" . - Yechim : LINK Bitta x o'zgaruvchisini ochib olamiz va operations ni har bitta elementi \"++\" yoki \"--\" o'z ichiga olishini tekshirib shu bo'yicha kerakli amallarni bajaramiz. Time Complexity : O(n) Space Complexity : O(1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Author: Abdulaminkhon Khaydarov # Date: 06/11/22 # Problem URL: https://leetcode.com/problems/final-value-of-variable-after-performing-operations/ from typing import List class Solution : def finalValueAfterOperations ( self , operations : List [ str ]) -> int : x = 0 for operation in operations : if \"++\" in operation : x += 1 else : x -= 1 return x if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . finalValueAfterOperations ([ \"--X\" , \"X++\" , \"X++\" ]) == 1 ) # Example 2 print ( solution . finalValueAfterOperations ([ \"++X\" , \"++X\" , \"X++\" ]) == 3 ) # Example 3 print ( solution . finalValueAfterOperations ([ \"X++\" , \"++X\" , \"--X\" , \"X--\" ]) == 0 )","title":"2011 - Final Value of Variable After Performing Operations"},{"location":"array/easy/2011-final-value-of-variable-after-performing-operations/#masala-sharti-link","text":"Inglizcha : There is a programming language with only four operations and one variable X : ++X and X++ increments the value of the variable X by 1 . --X and X-- decrements the value of the variable X by 1 . Initially, the value of X is 0 . Given an array of strings operations containing a list of operations, return the final value of X after performing all the operations. O'zbekcha : Bitta dasturlash tili bor 4 ta operatsiya bilan va X o'zgaruvchisi bor: ++X va X++ operatsiyasilari X o'zgaruvchini 1 ga oshiradi. --X va X-- operatsiyasilari X o'zgaruvchini 1 ga kamaytiradi. X ning boshlang'ich qiymati 0 . Berilgan operations array barcha bajarilishi bo'lgan operatsiya(string)larni o'z ichiga olgan. Barcha operatsiyadan so'ng X ning yakuniy qiymati qaytarilsin.","title":"MASALA SHARTI: LINK"},{"location":"array/easy/2011-final-value-of-variable-after-performing-operations/#misol-1","text":"$ Input: operations = [ \"--X\" , \"X++\" , \"X++\" ] $ Output: 1 $ Explanation: The operations are performed as follows: Initially, X = 0. --X: X is decremented by 1, X = 0 - 1 = -1. X++: X is incremented by 1, X = -1 + 1 = 0. X++: X is incremented by 1, X = 0 + 1 = 1.","title":"Misol 1"},{"location":"array/easy/2011-final-value-of-variable-after-performing-operations/#misol-2","text":"$ Input: operations = [ \"++X\" , \"++X\" , \"X++\" ] $ Output: 3 $ Explanation: The operations are performed as follows: Initially, X = 0. ++X: X is incremented by 1, X = 0 + 1 = 1. ++X: X is incremented by 1, X = 1 + 1 = 2. X++: X is incremented by 1, X = 2 + 1 = 3.","title":"Misol 2"},{"location":"array/easy/2011-final-value-of-variable-after-performing-operations/#misol-3","text":"$ Input: operations = [ \"X++\" , \"++X\" , \"--X\" , \"X--\" ] $ Output: 0 $ Explanation: The operations are performed as follows: Initially, X = 0. X++: X is incremented by 1, X = 0 + 1 = 1. ++X: X is incremented by 1, X = 1 + 1 = 2. --X: X is decremented by 1, X = 2 - 1 = 1. X--: X is decremented by 1, X = 1 - 1 = 0.","title":"Misol 3"},{"location":"array/easy/2011-final-value-of-variable-after-performing-operations/#cheklovlar","text":"1 <= operations.length <= 100 operations[i] will be either \"++X\" , \"X++\" , \"--X\" , or \"X--\" .","title":"Cheklovlar"},{"location":"array/easy/2011-final-value-of-variable-after-performing-operations/#-yechim-link","text":"Bitta x o'zgaruvchisini ochib olamiz va operations ni har bitta elementi \"++\" yoki \"--\" o'z ichiga olishini tekshirib shu bo'yicha kerakli amallarni bajaramiz. Time Complexity : O(n) Space Complexity : O(1) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # Author: Abdulaminkhon Khaydarov # Date: 06/11/22 # Problem URL: https://leetcode.com/problems/final-value-of-variable-after-performing-operations/ from typing import List class Solution : def finalValueAfterOperations ( self , operations : List [ str ]) -> int : x = 0 for operation in operations : if \"++\" in operation : x += 1 else : x -= 1 return x if __name__ == '__main__' : solution = Solution () # Example 1 print ( solution . finalValueAfterOperations ([ \"--X\" , \"X++\" , \"X++\" ]) == 1 ) # Example 2 print ( solution . finalValueAfterOperations ([ \"++X\" , \"++X\" , \"X++\" ]) == 3 ) # Example 3 print ( solution . finalValueAfterOperations ([ \"X++\" , \"++X\" , \"--X\" , \"X--\" ]) == 0 )","title":"- Yechim: LINK"}]}